[build-system]
build-backend = "hatchling.build"
requires = [
  "hatchling >=1.12.2",
  "hatch-vcs >=0.2.0",
]

[project]
authors = [{name = "conda steering council", email = "steering@conda.org"}]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "License :: OSI Approved :: BSD License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "pydantic>=2",
]
description = "OS-agnostic, system-level binary package manager."
license = {file = "LICENSE"}
name = "conda-models"
readme = "README.md"
requires-python = ">=3.10"
version = "2025"

[project.urls]
repository = "https://github.com/conda/schemas"

[tool.ruff]
exclude = [
  "conda/auxlib",
  "tests/data/conda_format_repo",
  "tests/data/env_metadata",
]
target-version = "py310"

[tool.ruff.lint]
extend-per-file-ignores = {"docs/*" = ["D1"], "tests/*" = ["D1"]}
flake8-type-checking = {exempt-modules = [], strict = true}
ignore = [
  "D101",  # Missing docstring in public class
  "D102",  # Missing docstring in public method
  "D103",  # Missing docstring in public function
  "D104",  # Missing docstring in public package
  "D105",  # Missing docstring in magic method
  "D107",  # Missing docstring in `__init__`
  "E402",  # module level import not at top of file
  "E501",  # line too long
  "E722",  # do not use bare 'except'
  "E731",  # do not assign a lambda expression, use a def
  "UP031",  # do not fix printf-style string formatting
]
pydocstyle = {convention = "pep257"}
# see https://docs.astral.sh/ruff/rules/
select = [
  "D1",  # pydocstyle
  "E",  # pycodestyle errors
  "F",  # pyflakes
  "FA",  # flake8-future-annotations
  "I",  # isort
  "ISC",  # flake8-implicit-str-concat
  "RUF100",  # Unused noqa directive
  "T10",  # flake8-debugger
  "TCH",  # flake8-type-checking
  "UP",  # pyupgrade
  "W",  # pycodestyle warnings
]
